From 329e51a196e604a5db2510494ff4e180fbfe841a Mon Sep 17 00:00:00 2001
Message-ID: <329e51a196e604a5db2510494ff4e180fbfe841a.1752879783.git.sam@gentoo.org>
In-Reply-To: <cca06d1e46af7098c05a417746e57aaef6d17cd0.1752879783.git.sam@gentoo.org>
References: <cca06d1e46af7098c05a417746e57aaef6d17cd0.1752879783.git.sam@gentoo.org>
From: Claudiu Zissulescu <claudiu.zissulescu-ianculescu@oracle.com>
Date: Thu, 17 Jul 2025 16:43:27 +0300
Subject: [PATCH 7/8] configure: Disable SFrame backtracing

The SFrame backtracing is experimental, disable it by default. SFrame
backtracing can be enabled using "--enable-sframe" while configuring
glibc.

Signed-off-by: Claudiu Zissulescu <claudiu.zissulescu-ianculescu@oracle.com>
Signed-off-by: Sam James <sam@gentoo.org>
---
 INSTALL             |  9 +++++----
 config.make.in      |  1 -
 configure           | 19 ++++++++++---------
 configure.ac        | 16 ++++++++--------
 manual/install.texi |  9 +++++----
 5 files changed, 28 insertions(+), 26 deletions(-)

diff --git a/INSTALL b/INSTALL
index 113c3730b9..9900b31209 100644
--- a/INSTALL
+++ b/INSTALL
@@ -292,10 +292,11 @@ passed to 'configure'.  For example:
 
      Default is to disable fortification.
 
-'--disable-sframe'
-     By default, the GNU C Library is built with '-Wa,--gsframe' if the
-     current GNU 'binutils' supports it.  You may want to use this
-     option if you don't plan to use SFrame stack tracer.
+'--enable-sframe'
+     Experimental option supported by selected architectures (e.g.
+     x86_64 and AArch64), the GNU C Library is built with
+     '-Wa,--gsframe' if the current GNU 'binutils' supports it.  You may
+     want to use this option if you plan to use SFrame stack tracer.
 
    To build the library and related programs, type 'make'.  This will
 produce a lot of output, some of which may look like errors from 'make'
diff --git a/config.make.in b/config.make.in
index 382e003d87..59897eaec2 100644
--- a/config.make.in
+++ b/config.make.in
@@ -51,7 +51,6 @@ c++-cstdlib-header = @CXX_CSTDLIB_HEADER@
 c++-cmath-header = @CXX_CMATH_HEADER@
 c++-bits-std_abs-h = @CXX_BITS_STD_ABS_H@
 enable-werror = @enable_werror@
-enable-gsframe = @enable_gsframe@
 
 have-z-execstack = @libc_cv_z_execstack@
 have-no-error-execstack = @libc_cv_no_error_execstack@
diff --git a/configure b/configure
index 44e4739959..da88cb11de 100755
--- a/configure
+++ b/configure
@@ -620,7 +620,6 @@ DEFINES
 static_nss
 profile
 libc_cv_multidir
-enable_gsframe
 READELF_SFRAME
 libc_cv_test_x86_have_amx_tile
 test_enable_cet
@@ -1508,8 +1507,8 @@ Optional Features:
                           Use -D_FORTIFY_SOURCE=[1|2|3] to control code
                           hardening, defaults to highest possible value
                           supported by the build compiler.
-  --disable-sframe        Disable building with SFrame stack trace information
-                          [default=yes if GNU as is 2.41 or older]
+  --enable-sframe         Enable building with SFrame stack trace information
+                          [default=no]
 
 Optional Packages:
   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
@@ -4893,7 +4892,7 @@ if test ${enable_sframe+y}
 then :
   enableval=$enable_sframe; use_sframe=$enableval
 else case e in #(
-  e) use_sframe=notset ;;
+  e) use_sframe=no ;;
 esac
 fi
 
@@ -9215,7 +9214,7 @@ printf %s "checking version of $READELF_SFRAME... " >&6; }
   ac_prog_version=`$READELF_SFRAME --version 2>&1 | sed -n 's/^.*GNU readelf.* \([0-9][0-9]*\.[0-9.]*\).*$/\1/p'`
   case $ac_prog_version in
     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
-    2.4[1-9]*|2.[5-9][0-9]*|[3-9].*|[1-9][0-9][0-9]*)
+    2.4[5-9]*|2.[5-9][0-9]*|[3-9].*|[1-9][0-9][0-9]*)
        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
 
@@ -9258,16 +9257,18 @@ fi
 
 # Prevent enabling sframe on non-supporting toolchains
 enable_gsframe=no
-if test $use_sframe$libc_cv_default_sframe = yesyes || \
-   test $use_sframe$libc_cv_default_sframe = notsetyes; then
-  enable_gsframe=yes
+if test $use_sframe$libc_cv_default_sframe = yesyes; then
+   enable_gsframe=yes
+   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: ...and using SFrame for this build" >&5
+printf "%s\n" "...and using SFrame for this build" >&6; }
 elif test $use_sframe = yes; then
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
 printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
 as_fn_error $? "toolchain doesn't support SFrame v2 or higher
 See 'config.log' for more details" "$LINENO" 5; }
 fi
-
+config_vars="$config_vars
+enable-gsframe = $enable_gsframe"
 
 # Set the `multidir' variable by grabbing the variable from the compiler.
 # We do it once and save the result in a generated makefile.
diff --git a/configure.ac b/configure.ac
index 2099790d17..0a2dfe82c8 100644
--- a/configure.ac
+++ b/configure.ac
@@ -441,10 +441,10 @@ case "$enable_fortify_source" in
 esac
 
 AC_ARG_ENABLE([sframe],
-	      [AS_HELP_STRING([--disable-sframe],
-			     [Disable building with SFrame stack trace information @<:@default=yes if GNU as is 2.41 or older@:>@])],
+	      [AS_HELP_STRING([--enable-sframe],
+			     [Enable building with SFrame stack trace information @<:@default=no@:>@])],
 	      [use_sframe=$enableval],
-	      [use_sframe=notset])
+	      [use_sframe=no])
 
 # We keep the original values in `$config_*' and never modify them, so we
 # can write them unchanged into config.make.  Everything else uses
@@ -2077,7 +2077,7 @@ libc_cv_readelf_version_ok=yes
 # SFrame is supported from 2.41 or higher
 AC_CHECK_PROG_VER(READELF_SFRAME, $READELF, --version,
   [GNU readelf.* \([0-9][0-9]*\.[0-9.]*\)],
-  [2.4[1-9]*|2.[5-9][0-9]*|[3-9].*|[1-9][0-9][0-9]*],
+  [2.4[5-9]*|2.[5-9][0-9]*|[3-9].*|[1-9][0-9][0-9]*],
   libc_cv_readelf_version_ok=no)
 
 # Check the current toolchain for SFrame support
@@ -2102,13 +2102,13 @@ fi
 
 # Prevent enabling sframe on non-supporting toolchains
 enable_gsframe=no
-if test $use_sframe$libc_cv_default_sframe = yesyes || \
-   test $use_sframe$libc_cv_default_sframe = notsetyes; then
-  enable_gsframe=yes
+if test $use_sframe$libc_cv_default_sframe = yesyes; then
+   enable_gsframe=yes
+   AC_MSG_RESULT(...and using SFrame for this build)
 elif test $use_sframe = yes; then
    AC_MSG_FAILURE([toolchain doesn't support SFrame v2 or higher])
 fi
-AC_SUBST(enable_gsframe)
+LIBC_CONFIG_VAR([enable-gsframe], [$enable_gsframe])
 
 # Set the `multidir' variable by grabbing the variable from the compiler.
 # We do it once and save the result in a generated makefile.
diff --git a/manual/install.texi b/manual/install.texi
index 8f069b331d..06537b68cf 100644
--- a/manual/install.texi
+++ b/manual/install.texi
@@ -321,10 +321,11 @@ the build compiler.
 
 Default is to disable fortification.
 
-@item --disable-sframe
-By default, the GNU C Library is built with @option{-Wa,--gsframe} if
-the current GNU @code{binutils} supports it. You may want to use this
-option if you don't plan to use SFrame stack tracer.
+@item --enable-sframe
+Experimental option supported by selected architectures (e.g. x86_64
+and AArch64), @theglibc{} is built with @option{-Wa,--gsframe} if the
+current GNU @code{binutils} supports it. You may want to use this
+option if you plan to use SFrame stack tracer.
 @end table
 
 To build the library and related programs, type @code{make}.  This will
-- 
2.50.1

